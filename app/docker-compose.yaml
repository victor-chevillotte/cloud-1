services:
  db:
    image: mariadb:10.6.4-focal
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
  wordpress:
    image: wordpress:latest
    ports:
      - 80:80
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
volumes:
  db_data:

# version: '3'

# services:

#   traefik:
#     image: traefik:2.10.4
#     command:
#       - "--log.level=DEBUG"
#       - "--api.dashboard=true"
#       - "--providers.docker=true"
#       - "--providers.docker.exposedbydefault=false"
#       - "--entryPoints.web.address=:80"
#       - "--entryPoints.web.http.redirections.entrypoint.to=:${HTTPS_PORT}"
#       - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
#       - "--entryPoints.websecure.address=:443"
#       - "--certificatesResolvers.acme-resolver.acme.email=${ACME_EMAIL}"
#       - "--certificatesResolvers.acme-resolver.acme.storage=/etc/traefik/certs/acme.json"
#       - "--certificatesResolvers.acme-resolver.acme.tlsChallenge=true"
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - traefik:/etc/traefik/dynamic
#       - certs:/etc/traefik/certs
#     ports:
#       - ${HTTP_PORT:-80}:80
#       - ${HTTPS_PORT:-443}:443
#     networks:
#       - wordpress
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.traefik_https.rule=Host(`${TRAEFIK_HOST}`)"
#       - "traefik.http.routers.traefik_https.entrypoints=websecure"
#       - "traefik.http.routers.traefik_https.tls=true"
#       - "traefik.http.routers.traefik_https.service=api@internal"
#       - "traefik.http.routers.traefik_https.middlewares=traefik-auth"
#       - "traefik.http.routers.traefik_https.tls.certResolver=acme-resolver"
#       - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}"
#       - "traefik.http.services.traefik.loadbalancer.server.port=8080"

#   keycloak:
#     image: quay.io/keycloak/keycloak:22.0.4
#     container_name: keycloak
#     environment:
#       - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
#       - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
#       - KC_HOSTNAME_URL=https://${KEYCLOAK_HOST}/
#       - KC_HOSTNAME_ADMIN_URL=https://${KEYCLOAK_HOST}/
#       - KC_PROXY=edge
#       - KC_HOSTNAME_STRICT=true
#       - KC_HOSTNAME_STRICT_HTTPS=true
#       - KC_DB=postgres
#       - KC_DB_URL_HOST=keycloak_postgres
#       - KC_DB_URL_PORT=5432
#       - KC_DB_URL_DATABASE=${KEYCLOAK_DB_NAME}
#       - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
#       - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOST}`)"
#       - "traefik.http.routers.keycloak.entrypoints=websecure"
#       - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
#       - "traefik.http.routers.keycloak.tls.certResolver=acme-resolver"
#       - "entryPoints.web.forwardedHeaders.insecure" # change to trustedIPs in production 
#       - "traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto: https"
#     command:
#       - start-dev
#     networks:
#       - wordpress
#     depends_on:
#       - keycloak_postgres

#   keycloak_postgres:
#     image: postgres
#     environment:
#       POSTGRES_DB: ${KEYCLOAK_DB_NAME}
#       POSTGRES_USER: ${KEYCLOAK_DB_USER}
#       POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
#       PGDATA: /var/lib/postgresql/data/
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/:rw
#     networks:
#       - wordpress

# volumes:
#     postgis_volume:
#     postgres_data:
#     traefik:
#     certs:

# networks:
#   wordpress:
#     name: wordpress
